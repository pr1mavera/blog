(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{336:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("华夏前端UI组件移动端框架技术选型，我们团队经讨论之后推荐 "),a("code",[t._v("cube-ui")]),t._v(" ，理由如下：")]),t._v(" "),a("h2",{attrs:{id:"同类型框架的比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同类型框架的比较"}},[t._v("#")]),t._v(" 同类型框架的比较")]),t._v(" "),a("p",[t._v("我们研究了几款现在市场用户占有率比较高的移动端UI框架，各项数据比较如下：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[a("a",{attrs:{href:"https://vux.li/demos/v2/?x-page=v2-doc-home#/",target:"_blank",rel:"noopener noreferrer"}},[t._v("VUX"),a("OutboundLink")],1)]),t._v(" "),a("th",[a("a",{attrs:{href:"https://youzan.github.io/vant/mobile.html#/zh-CN/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vant"),a("OutboundLink")],1)]),t._v(" "),a("th",[a("a",{attrs:{href:"https://didi.github.io/cube-ui/example/#/",target:"_blank",rel:"noopener noreferrer"}},[t._v("cube-ui"),a("OutboundLink")],1)])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("介绍")]),t._v(" "),a("td",[t._v("基于 "),a("code",[t._v("WeUI")]),t._v(" 和 "),a("code",[t._v("Vue(2.x)")]),t._v(" 开发的移动端UI组件库，整体UI样式接近WeUI的设计规范")]),t._v(" "),a("td",[t._v("由有赞前端团队开发并维护， "),a("code",[t._v("Vue")]),t._v(" 官方推荐UI组件框架，规范统一")]),t._v(" "),a("td",[t._v("滴滴前端团队内部组件库提炼组件库")])]),t._v(" "),a("tr",[a("td",[t._v("文档")]),t._v(" "),a("td",[t._v("文档结构清晰")]),t._v(" "),a("td",[t._v("文档清晰齐全，规范统一，实例丰富，场景覆盖广泛")]),t._v(" "),a("td",[t._v("场景覆盖广泛，遵循统一的设计交互标准，文档规范统一")])]),t._v(" "),a("tr",[a("td",[t._v("维护")]),t._v(" "),a("td",[t._v("作者已停止维护，项目及文档已不在更新 😕")]),t._v(" "),a("td",[t._v("由有赞前端团队维护，同时UI设计由专门的设计团队维护，社区活跃 🤓")]),t._v(" "),a("td",[t._v("由滴滴前端团队维护，社区活跃 🤓")])]),t._v(" "),a("tr",[a("td",[t._v("拓展性")]),t._v(" "),a("td",[t._v("组件封装程度较高，拓展性欠佳")]),t._v(" "),a("td",[t._v("可在现有的组件基础上进行二次封装")]),t._v(" "),a("td",[t._v("支持后编译和源码级发布，可高度自定义，拓展性极强")])]),t._v(" "),a("tr",[a("td",[t._v("动画及性能")]),t._v(" "),a("td",[t._v("组件动画丰富、流畅，且交互体验接近微信")]),t._v(" "),a("td",[t._v("组件内置动画丰富，动画整体风格统一")]),t._v(" "),a("td",[t._v("动画精致，风格统一，同时内置的better-scroll模块统一了 "),a("code",[t._v("iOS")]),t._v(" 和 "),a("code",[t._v("Android")]),t._v(" 等不同终端平台的基础滚动交互")])]),t._v(" "),a("tr",[a("td",[t._v("自定义主题")]),t._v(" "),a("td",[t._v("通过样式覆盖的方式实现主题自定义")]),t._v(" "),a("td",[t._v("提供了一套默认主题，同时支持完全替换主题色或者其他样式")]),t._v(" "),a("td",[t._v("几乎所有的组件样式主题均可配置，同时发布时不存在样式冗余覆盖的问题")])]),t._v(" "),a("tr",[a("td",[t._v("弹出层类组件层级提升")]),t._v(" "),a("td",[t._v("通过其内置的transform自定义组件实现")]),t._v(" "),a("td",[t._v("可指定组件挂载的节点实现")]),t._v(" "),a("td",[t._v("可通过create-api实现")])]),t._v(" "),a("tr",[a("td",[t._v("后编译")]),t._v(" "),a("td",[t._v("不支持 ❌")]),t._v(" "),a("td",[t._v("不支持 ❌")]),t._v(" "),a("td",[t._v("支持 ✅")])])])]),t._v(" "),a("p",[t._v("通过数据的比较可以看出， "),a("code",[t._v("VUX")]),t._v(" 现已无人维护，暂不考虑， "),a("code",[t._v("Vant")]),t._v(" 的优点是"),a("strong",[t._v("整体设计风格和规范")]),t._v("相较其他两个更加"),a("strong",[t._v("规范和齐全")]),t._v("，而 "),a("code",[t._v("cube-ui")]),t._v(" 最大的特点就是很适合"),a("strong",[t._v("二次开发")]),t._v("，搭建适合团队的内部公共组件库。")]),t._v(" "),a("h2",{attrs:{id:"cube-ui-的亮点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cube-ui-的亮点"}},[t._v("#")]),t._v(" cube-ui 的亮点")]),t._v(" "),a("p",[t._v("相较于其他两款UI组件框架，cube-ui有一些特有的亮点：")]),t._v(" "),a("h3",{attrs:{id:"style模块及自定义主题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#style模块及自定义主题"}},[t._v("#")]),t._v(" style模块及自定义主题")]),t._v(" "),a("h3",{attrs:{id:"create-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-api"}},[t._v("#")]),t._v(" create-api")]),t._v(" "),a("p",[t._v("cube-ui可以通过 "),a("code",[t._v("create-api")]),t._v(" 很方便的自定义组件，可以配合现有库的一些功能，快速定制化自定义组件行为，这一点对二次开发十分友好。")]),t._v(" "),a("h3",{attrs:{id:"后编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后编译"}},[t._v("#")]),t._v(" 后编译")]),t._v(" "),a("p",[t._v("后编译是cube-ui特有的一个十分重要的特性，其官方文档解释了这项特性的背景：")]),t._v(" "),a("blockquote",[a("p",[t._v("使用 webpack + babel 开发应用越来越多，而且一般都是通过 NPM 进行包管理的，这样依赖包越来越多，这些依赖包也是使用的 ES2015+ 开发的，所以每个依赖包都需要编译才能发布，这样编译后代码中往往后包含很多编译代码，所以为了消除这部分冗余，推荐大家使用后编译。")])]),t._v(" "),a("p",[t._v("相当于是我们在使用UI组件进行开发的时候引入的都是编译好的库文件，虽然可能这些组件库内部实现了一些按需引入的能力，但依旧存在一些冗余，更重要的是"),a("strong",[t._v("对于二次开发来讲不是特别友好")]),t._v("，我们为了适配自己项目的业务逻辑，可能都需要做一些暴力的工作比如强行覆盖一些样式、包装一些组件内部行为之类的。"),a("br"),t._v("\n然而如果我们能直接通过引入源码级的组件，甚至是将组件库本身作为基础库，拓展一些额外的行为来适配我们自己的项目，这样对于项目的开发成本、项目发布时候的编译优化、组内UI库的迭代，各方面都是有一定帮助的。"),a("strong",[t._v("相当于是拿到人家的源代码来编写自己的项目，真正做到源码级发布")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"二次开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二次开发"}},[t._v("#")]),t._v(" 二次开发")]),t._v(" "),a("p",[t._v("这里我通过一个例子模拟一下现有项目集成 "),a("code",[t._v("cube-ui")]),t._v(" 进行二次开发的流程。"),a("br"),t._v("\n由于只是为了演示集成过程，我们假设原有项目通过 "),a("code",[t._v("vue-cli")]),t._v(" 构建，并从这个基础上集成 "),a("code",[t._v("cube-ui")]),t._v(" 。")]),t._v(" "),a("h3",{attrs:{id:"下载依赖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#下载依赖"}},[t._v("#")]),t._v(" 下载依赖")]),t._v(" "),a("p",[t._v("首先是 "),a("code",[t._v("cube-ui")]),t._v(" ，我们将其声明在dependencies中：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" cube-ui --save\n")])])]),a("p",[t._v("然后我们需要为后编译添加几个插件和申明：")]),t._v(" "),a("h3",{attrs:{id:"引入路径替换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引入路径替换"}},[t._v("#")]),t._v(" 引入路径替换")]),t._v(" "),a("p",[t._v("我们需要一个插件")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" babel-plugin-transform-modules --save-dev\n")])])]),a("p",[a("code",[t._v("babel-plugin-transform-modules")]),t._v(" 这是个用来解决组件按需引入的问题的插件，举个例子：\n我们按需引入组件的时候一般这样去写：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Button "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cube-ui'")]),t._v("\n")])])]),a("p",[t._v('这样如果不做任何配置的话根据package.json中定义的main入口："lib/index.js"，引入的就是 '),a("code",[t._v("cube-ui")]),t._v(" 编译之后的组件了，这并不是我们想要的对吧，所以需要统一做路径替换，修改 "),a("code",[t._v(".babelrc")]),t._v(" ：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .babelrc")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"plugins"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transform-modules"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cube-ui"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意: 这里的路径需要修改到 src/modules 下")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transform"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cube-ui/src/modules/${member}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kebabCase"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这样相当于引入的就是这个路径的文件了：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Button "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cube-ui/src/modules/button'")]),t._v("\n")])])]),a("p",[t._v("这样做还有一个好处就是可以做到"),a("strong",[t._v("后编译和非后编译自由替换")]),t._v("！")]),t._v(" "),a("h3",{attrs:{id:"stylus-loader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stylus-loader"}},[t._v("#")]),t._v(" stylus-loader")]),t._v(" "),a("p",[a("code",[t._v("cube-ui")]),t._v(" 源码的 css 部分使用了 "),a("code",[t._v("stylus")]),t._v(" 预处理器")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" stylus stylus-loader --save-dev\n")])])]),a("h3",{attrs:{id:"添加编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加编译"}},[t._v("#")]),t._v(" 添加编译")]),t._v(" "),a("p",[t._v("既然是后编译，我们自然需要将编译流程挂载到自身项目上来，这里需要用到一个插件："),a("code",[t._v("webpack-post-compile-plugin")]),t._v("，就是为了解决后编译问题的")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" webpack-post-compile-plugin --save-dev\n")])])]),a("p",[a("strong",[t._v("说说这个流程：")]),a("br"),t._v("\n首先因为webpack配置中是声明了不编译 "),a("code",[t._v("node_modules")]),t._v(" 目录下的内容的，但是我们的 "),a("code",[t._v("cube-ui")]),t._v(" 是存放在 "),a("code",[t._v("node_modules")]),t._v(" 中的，所以要在webpack配置中显示include我们的 "),a("code",[t._v("cube-ui")]),t._v(" 模块")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// webpack.base.conf.js")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\.js$/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    loader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'babel-loader'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    include"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'src'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'node_modules/cube-ui'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n")])])]),a("p",[t._v("但是这样做还存在一个问题，就是如果 "),a("code",[t._v("cube-ui")]),t._v(" 一旦也后编译依赖其它模块，作为编译的应用方也需要把它们显示地写进 include 里，但这显然是不合理的，因为应用不应该知道 "),a("code",[t._v("cube-ui")]),t._v(" 依赖的模块，每个模块只应该声明它自身的后编译依赖即可。那么 "),a("code",[t._v("webpack-post-compile-plugin")]),t._v(" 就是来解决这个问题的，它会读取每个模块 package.json 文件中声明的 "),a("code",[t._v("compileDependencies")]),t._v(" ，并递归去查找后编译依赖，然后添加到应用 webpack 配置的 include 中，所以在我们应用项目中的 package.json 文件中，我们指定了 "),a("code",[t._v("compileDependencies")]),t._v(" 为 "),a("code",[t._v("[cube-ui]")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// package.json")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"compileDependencies"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cube-ui"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n")])])]),a("p",[t._v("最后我们需要将PostCompilePlugin插件注册到webpack配置中")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" PostCompilePlugin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'webpack-post-compile-plugin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    plugins"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PostCompilePlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这样我们就完成了原有项目集成 "),a("code",[t._v("cube-ui")]),t._v(" 的相关配置，下面我们来修改一下 "),a("code",[t._v("Button")]),t._v(" 组件的源码，看看有什么效果：")]),t._v(" "),a("h3",{attrs:{id:"修改源码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改源码"}},[t._v("#")]),t._v(" 修改源码")]),t._v(" "),a("p",[t._v("首先我们引入 "),a("code",[t._v("Button")]),t._v(" 组件：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HelloWorld.vue")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Button "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cube-ui'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   ...")]),t._v("\n    components"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cube-button'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Button\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在模板中使用：")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("cube-button")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("icon")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("cubeic-right"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Button With Icon"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("cube-button")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("可以看到效果：\n"),a("img",{attrs:{src:"/blog/img/cube-ui/button.jpeg",alt:"button"}})]),t._v(" "),a("p",[t._v("接下来我们更改 "),a("code",[t._v("Button")]),t._v(" 组件的源码，再点击的时候弹出 1234：\n"),a("img",{attrs:{src:"/blog/img/cube-ui/alert.jpeg",alt:"alert"}})]),t._v(" "),a("p",[t._v("现在我们点击按钮，便可以看到弹出：\n"),a("img",{attrs:{src:"/blog/img/cube-ui/view.jpeg",alt:"view"}})]),t._v(" "),a("p",[t._v("这样我们就从组件内部，做到了源码层面的更改和封装。")]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")])])}),[],!1,null,null,null);s.default=n.exports}}]);