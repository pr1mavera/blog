(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{363:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h4",{attrs:{id:"使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[t._v("#")]),t._v(" 使用场景")]),t._v(" "),s("p",[t._v("将js中 es2015 / 2016 / 2017 / ... 新语法转（只转换新语法，并不转换新API，如 Iterator、Generator 等）换成更早期的语法如 es5")]),t._v(" "),s("h4",{attrs:{id:"使用方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用方式"}},[t._v("#")]),t._v(" 使用方式")]),t._v(" "),s("ol",[s("li",[t._v("单体文件")]),t._v(" "),s("li",[t._v("命令行（CLI） - package.json 中配置 "),s("code",[t._v("scripts")])]),t._v(" "),s("li",[t._v("构建工具的插件（webpack 的 babel-loader）")])]),t._v(" "),s("h2",{attrs:{id:"基本结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本结构"}},[t._v("#")]),t._v(" 基本结构")]),t._v(" "),s("ul",[s("li",[t._v("插件（plugins）\n"),s("ul",[s("li",[t._v("「语法插件」 - 在 "),s("strong",[t._v("解析")]),t._v(" 阶段使得 babel 能够解析更多的语法")]),t._v(" "),s("li",[t._v("「转译插件」 - 在 "),s("strong",[t._v("转换")]),t._v(" 阶段将源码转换并输出")]),t._v(" "),s("li",[t._v("同一类插件一般存在「语法插件」和「转译插件」，一般来说「转译插件」可以代替「语法插件」")])])]),t._v(" "),s("li",[t._v("预设（preset）\n"),s("ul",[s("li",[t._v("对于环境的配置集合")]),t._v(" "),s("li",[t._v("env - 通过配置得知目标环境的特点，再只做必要的转换\n"),s("ul",[s("li",[t._v("默认配置项为 latest ，即 es2015 + es2016 + es2017")]),t._v(" "),s("li",[s("code",[t._v("targets.node: 'current'")]),t._v(" - 支持最新node稳定版本")]),t._v(" "),s("li",[s("code",[t._v("modules: amd | umd | systemjs | commonjs | false")]),t._v(" - 以特定的模块化格式来输出代码")])])]),t._v(" "),s("li",[t._v("stage-x - 包含的都是当年最新规范的草案\n"),s("ul",[s("li",[t._v("Stage 0 - 稻草人: 只是一个想法，经过 TC39 成员提出即可。")]),t._v(" "),s("li",[t._v("Stage 1 - 提案: 初步尝试。")]),t._v(" "),s("li",[t._v("Stage 2 - 初稿: 完成初步规范。")]),t._v(" "),s("li",[t._v("Stage 3 - 候选: 完成规范和浏览器初步实现。")]),t._v(" "),s("li",[t._v("Stage 4 - 完成: 将被添加到下一年度发布。")])])]),t._v(" "),s("li",[t._v("es201x, latest - 已经纳入到标准规范的语法")])])])]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"presets"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不带配置项，直接列出名字")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"env"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 带了配置项，以数组方式传入")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一项列出名字")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"someConfig"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第二项列出相关参数的对象")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"someOption"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"plugins"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"基本行为"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本行为"}},[t._v("#")]),t._v(" 基本行为")]),t._v(" "),s("ul",[s("li",[t._v("运行阶段 - 解析，转换，生成")]),t._v(" "),s("li",[t._v("运行方式\n"),s("ul",[s("li",[t._v("先 plugins，后 preset")]),t._v(" "),s("li",[t._v("plugins 顺序执行")]),t._v(" "),s("li",[t._v("preset 逆序执行")])])])]),t._v(" "),s("h2",{attrs:{id:"配套工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配套工具"}},[t._v("#")]),t._v(" 配套工具")]),t._v(" "),s("p",[t._v("上述 babel 核心不会变，配套工具只是从不同的入口环境进入 babel 的整套流程，或者作为一些插件在 babel 的生命周期中发挥作用")]),t._v(" "),s("h3",{attrs:{id:"babel-loader"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-loader"}},[t._v("#")]),t._v(" babel-loader")]),t._v(" "),s("p",[t._v("webpack 中的 babel 加载方案，用于在 webpack 中集成 babel")]),t._v(" "),s("h3",{attrs:{id:"babel-cli"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-cli"}},[t._v("#")]),t._v(" babel-cli")]),t._v(" "),s("p",[t._v("使得可以在命令行中使用 babel ，主要用于小项目不含独立的构建工具时使用")]),t._v(" "),s("h3",{attrs:{id:"babel-node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-node"}},[t._v("#")]),t._v(" babel-node")]),t._v(" "),s("p",[s("strong",[t._v("babel-cli")]),t._v(" 的一部分，在 node 环境中使用后，可以直接运行 es2015 的代码，不用再进行转码了")]),t._v(" "),s("h4",{attrs:{id:"存在两部分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#存在两部分"}},[t._v("#")]),t._v(" 存在两部分")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("babel-register")]),t._v(" - 重写 "),s("code",[t._v("require")]),t._v(" 命令，在加载 "),s("code",[t._v(".js")]),t._v("、"),s("code",[t._v(".jsx")]),t._v("、"),s("code",[t._v(".es")]),t._v(" 和 "),s("code",[t._v(".es6")]),t._v(" 文件时先用 babel 进行实时转码，只适用于开发阶段")]),t._v(" "),s("li",[s("strong",[t._v("babel-polyfill")]),t._v(" - 用于转换新API，如 "),s("code",[t._v("Iterator")]),t._v("、"),s("code",[t._v("Generator")]),t._v("、"),s("code",[t._v("Set")]),t._v("、"),s("code",[t._v("Maps")]),t._v("、"),s("code",[t._v("Proxy")]),t._v("、"),s("code",[t._v("Reflect")]),t._v("、"),s("code",[t._v("Symbol")]),t._v("、"),s("code",[t._v("Promise")])])]),t._v(" "),s("h3",{attrs:{id:"babel-polyfill"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-polyfill"}},[t._v("#")]),t._v(" babel-polyfill")]),t._v(" "),s("p",[t._v("集成了 "),s("strong",[t._v("core-js")]),t._v("、"),s("strong",[t._v("regenerator")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("core-js")]),t._v(" - 将 "),s("strong",[t._v("babel-polyfill")]),t._v(" 上所有polyfill方法分割模块，提供出按需的引入方式")]),t._v(" "),s("li",[s("strong",[t._v("regenerator")]),t._v(" -")])]),t._v(" "),s("h4",{attrs:{id:"babel-polyfill-存在两个缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-polyfill-存在两个缺点"}},[t._v("#")]),t._v(" "),s("strong",[t._v("babel-polyfill")]),t._v(" 存在两个缺点")]),t._v(" "),s("ol",[s("li",[t._v("导致打出来的包非常大，因为 "),s("strong",[t._v("babel-polyfill")]),t._v(" 是一个整体，会将所有方法均放在原型链上（可改用 "),s("strong",[t._v("core-js")]),t._v(" 上某些库按需引入解决）")]),t._v(" "),s("li",[t._v("会污染全局变量，给很多类的原型链上都作了修改（实际生产上采用 "),s("strong",[t._v("babel-plugin-transform-runtime")]),t._v(" 解决）")])]),t._v(" "),s("h3",{attrs:{id:"babel-runtime-与-babel-plugin-transform-runtime"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-runtime-与-babel-plugin-transform-runtime"}},[t._v("#")]),t._v(" babel-runtime 与 babel-plugin-transform-runtime")]),t._v(" "),s("p",[t._v("二者一般绑定使用")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("babel-plugin-transform-runtime")]),t._v(" - 用于将 babel 在作用域生成的额外方法，改为引用方式加载进来，"),s("u",[t._v("从 "),s("strong",[t._v("babel-runtime")]),t._v(" 引入")]),t._v(" "),s("ul",[s("li",[t._v("解决的问题：babel 直接将转换的代码添加至当前作用域，并且在每处需要转换的地方都这样添加，必定会导致代码重复，使用 "),s("strong",[t._v("babel-plugin-transform-runtime")]),t._v(" 则改为引用方式加载")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不使用 babel-plugin-transform-runtime")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// babel 添加一个方法，把 async 转化为 generator")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_asyncToGenerator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 很长很长一段")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用 babel-plugin-transform-runtime")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从直接定义改为引用，这样就不会重复定义了。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" _asyncToGenerator2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'babel-runtime/helpers/asyncToGenerator'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" _asyncToGenerator3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_interopRequireDefault")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_asyncToGenerator2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 具体使用处")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" _ref "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_asyncToGenerator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arg2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" something"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arg2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("strong",[t._v("babel-runtime")]),t._v(" - polyfill转换API集合，包含三部分\n"),s("ul",[s("li",[s("strong",[t._v("core-js")]),t._v(" - 内置类（Promise, Symbols等等）和静态方法（Array.from 等）大多数转换都从此处自动引入")]),t._v(" "),s("li",[s("strong",[t._v("regenerator")]),t._v(" - "),s("strong",[t._v("core-js")]),t._v(" 的拾遗补漏，主要是 "),s("code",[t._v("generator/yield")]),t._v(" 和 "),s("code",[t._v("async/await")]),t._v(" 两组的支持")]),t._v(" "),s("li",[s("strong",[t._v("helpers")]),t._v(" - 额外集合"),s("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//github.com/babel/babel/blob/6.x/packages/babel-helpers/src/helpers.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("babel-helpers"),s("OutboundLink")],1),t._v("，如 "),s("code",[t._v("asyncToGenerator")]),t._v("、"),s("code",[t._v("jsx")]),t._v("、"),s("code",[t._v("classCallCheck")]),t._v(" 等等，也可以使用单独抽出来的一个包 "),s("strong",[t._v("babel-plugin-external-helpers")]),t._v("（在 babel7 中删除）")])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);