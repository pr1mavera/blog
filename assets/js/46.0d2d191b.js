(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{370:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"断言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#断言"}},[t._v("#")]),t._v(" 断言")]),t._v(" "),a("p",[t._v("表示一个匹配在某些条件下发生。断言包含先行断言、后行断言和条件表达式。")]),t._v(" "),a("h3",{attrs:{id:"先行断言-x-y"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#先行断言-x-y"}},[t._v("#")]),t._v(" 先行断言 "),a("code",[t._v("x(?=y)")])]),t._v(" "),a("ul",[a("li",[t._v("Lookahead assertion")]),t._v(" "),a("li",[a("code",[t._v("/x(?=y)/")])]),t._v(" "),a("li",[t._v("匹配到后面存在 "),a("code",[t._v("y")]),t._v(" 的 "),a("code",[t._v("x")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/x(?=y)/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xy'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Jack")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Sprat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'JackSprat'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Jack")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Sprat"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("Frost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'JackSprat'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Jack")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Sprat"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("Frost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'JackFrost'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("h3",{attrs:{id:"负向先行断言-x-y"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#负向先行断言-x-y"}},[t._v("#")]),t._v(" 负向先行断言 "),a("code",[t._v("x(?!y)")])]),t._v(" "),a("ul",[a("li",[t._v("Negative lookahead assertion")]),t._v(" "),a("li",[a("code",[t._v("/x(?!y)/")])]),t._v(" "),a("li",[t._v("匹配到后面不是 "),a("code",[t._v("y")]),t._v(" 的 "),a("code",[t._v("x")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 找到后面不是小数点的数字")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.124'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d+(?!\\.)/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 找到的是 124")]),t._v("\n")])])]),a("h3",{attrs:{id:"后行断言-y-x"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后行断言-y-x"}},[t._v("#")]),t._v(" 后行断言 "),a("code",[t._v("(?<=y)x")])]),t._v(" "),a("ul",[a("li",[t._v("Lookbehind assertion")]),t._v(" "),a("li",[a("code",[t._v("/(?<=y)x/")])]),t._v(" "),a("li",[t._v("匹配到存在于 "),a("code",[t._v("y")]),t._v(" 后面的 "),a("code",[t._v("x")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?<=y)x/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yx'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v("Sprat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("Jack"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SpratJack'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v("Sprat"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("Tom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("Jack"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SpratJack'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v("Sprat"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("Tom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("Jack"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'TomJack'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("h3",{attrs:{id:"负向后行断言-y-x"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#负向后行断言-y-x"}},[t._v("#")]),t._v(" 负向后行断言 "),a("code",[t._v("(?<!y)x")])]),t._v(" "),a("ul",[a("li",[t._v("Negative Lookbehind assertion")]),t._v(" "),a("li",[a("code",[t._v("/(?<!y)x/")])]),t._v(" "),a("li",[t._v("匹配到前面不是 "),a("code",[t._v("y")]),t._v(" 的 "),a("code",[t._v("x")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 找到前面不是小数点的数字")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.124'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d+(?!\\.)/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 找到的是 3")]),t._v("\n")])])]),a("h2",{attrs:{id:"边界"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#边界"}},[t._v("#")]),t._v(" 边界")]),t._v(" "),a("p",[t._v("表示行和单词的开始和结尾。")]),t._v(" "),a("h3",{attrs:{id:"以开头"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#以开头"}},[t._v("#")]),t._v(" 以开头 "),a("code",[t._v("^")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("^A")])]),t._v(" "),a("li",[t._v("匹配以A开头")])]),t._v(" "),a("h3",{attrs:{id:"以结尾"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#以结尾"}},[t._v("#")]),t._v(" 以结尾 "),a("code",[t._v("$")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("A$")])]),t._v(" "),a("li",[t._v("匹配以A结尾")])]),t._v(" "),a("h3",{attrs:{id:"单词边界-b"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单词边界-b"}},[t._v("#")]),t._v(" 单词边界 "),a("code",[t._v("\\b")])]),t._v(" "),a("ul",[a("li",[t._v("匹配一个词的边界")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'moon'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\bm/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// m")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'moon'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/oon\\b/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// oon")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'moon'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\w\\b\\w/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",[a("code",[t._v("/\\w\\b\\w/")]),t._v(" 将不会匹配到任何内容，因为不可能存在这种情况：一个词"),a("strong",[t._v("有字符跟随")]),t._v("同时又"),a("strong",[t._v("没有字符跟随")])])]),t._v(" "),a("h3",{attrs:{id:"非单词边界-b"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非单词边界-b"}},[t._v("#")]),t._v(" 非单词边界 "),a("code",[t._v("\\B")])]),t._v(" "),a("ul",[a("li",[t._v("匹配一个非单词边界")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nooday'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\B.../")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ood")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'possibly yesterday'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/y\\B../")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// yes")]),t._v("\n")])])]),a("h2",{attrs:{id:"字符类别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符类别"}},[t._v("#")]),t._v(" 字符类别")]),t._v(" "),a("p",[t._v("用于区分不同类型的字符，例如区分字母和数字。")]),t._v(" "),a("h3",{attrs:{id:"单个字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单个字符"}},[t._v("#")]),t._v(" 单个字符 "),a("code",[t._v(".")])]),t._v(" "),a("ul",[a("li",[t._v("除换行符之外的任何单个字符")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nay, an apple is on the tree'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/.n/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// an, on")]),t._v("\n")])])]),a("h3",{attrs:{id:"数字-d-d"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数字-d-d"}},[t._v("#")]),t._v(" 数字 "),a("code",[t._v("\\d")]),t._v(" & "),a("code",[t._v("\\D")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("/\\d/")]),t._v(" 匹配一个数字，等价于"),a("code",[t._v("/[0-9]/")])]),t._v(" "),a("li",[a("code",[t._v("/\\D/")]),t._v(" 匹配一个非数字，等价于"),a("code",[t._v("/[^0-9]/")])])]),t._v(" "),a("h3",{attrs:{id:"单字字符-w-w"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单字字符-w-w"}},[t._v("#")]),t._v(" 单字字符 "),a("code",[t._v("\\w")]),t._v(" & "),a("code",[t._v("\\W")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("/\\w/")]),t._v(" 匹配一个单字字符（字母、数字或者下划线），等价于"),a("code",[t._v("/[A-Za-z0-9_]/")])]),t._v(" "),a("li",[a("code",[t._v("/\\W/")]),t._v(" 匹配一个非单字字符，等价于"),a("code",[t._v("/[^A-Za-z0-9_]/")])])]),t._v(" "),a("h3",{attrs:{id:"空白字符-s-s"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#空白字符-s-s"}},[t._v("#")]),t._v(" 空白字符 "),a("code",[t._v("\\s")]),t._v(" & "),a("code",[t._v("\\S")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("/\\s/")]),t._v(" 匹配一个空白字符（空格、制表符、换页符和换行符），等价于"),a("code",[t._v("/\\f\\n\\r\\t\\v\\u00a0\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff/")])]),t._v(" "),a("li",[a("code",[t._v("/\\S/")]),t._v(" 匹配一个非空白字符，等价于"),a("code",[t._v("/[^\\f\\n\\r\\t\\v\\u00a0\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]/")])])]),t._v(" "),a("h3",{attrs:{id:"回车符-r"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回车符-r"}},[t._v("#")]),t._v(" 回车符 "),a("code",[t._v("\\r")])]),t._v(" "),a("ul",[a("li",[t._v("匹配一个回车符")])]),t._v(" "),a("h3",{attrs:{id:"换行符-n"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#换行符-n"}},[t._v("#")]),t._v(" 换行符 "),a("code",[t._v("\\n")])]),t._v(" "),a("ul",[a("li",[t._v("匹配一个换行符")])]),t._v(" "),a("h3",{attrs:{id:"换页符-f"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#换页符-f"}},[t._v("#")]),t._v(" 换页符 "),a("code",[t._v("\\f")])]),t._v(" "),a("ul",[a("li",[t._v("匹配一个换页符")])]),t._v(" "),a("h3",{attrs:{id:"退格-b"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#退格-b"}},[t._v("#")]),t._v(" 退格 "),a("code",[t._v("[\\b]")])]),t._v(" "),a("ul",[a("li",[t._v("匹配一个退格")])]),t._v(" "),a("h3",{attrs:{id:"null-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null-0"}},[t._v("#")]),t._v(" NULL "),a("code",[t._v("\\0")])]),t._v(" "),a("ul",[a("li",[t._v("匹配 NULL 字符")]),t._v(" "),a("li",[t._v("不要在这后面跟其它小数，因为 "),a("code",[t._v("\\0<digits>")]),t._v(" 是一个八进制转义序列")])]),t._v(" "),a("h2",{attrs:{id:"组和范围"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组和范围"}},[t._v("#")]),t._v(" 组和范围")]),t._v(" "),a("p",[t._v("表示表达式字符的分组和范围。")]),t._v(" "),a("h3",{attrs:{id:"x-y"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#x-y"}},[t._v("#")]),t._v(" "),a("code",[t._v("x|y")])]),t._v(" "),a("ul",[a("li",[t._v("匹配 "),a("code",[t._v("x")]),t._v(" 或者 "),a("code",[t._v("y")])])]),t._v(" "),a("h3",{attrs:{id:"xyz-a-c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xyz-a-c"}},[t._v("#")]),t._v(" "),a("code",[t._v("[xyz]")]),t._v(" & "),a("code",[t._v("[a-c]")])]),t._v(" "),a("ul",[a("li",[t._v("一个字符集合")]),t._v(" "),a("li",[t._v("匹配方括号中的任意字符")]),t._v(" "),a("li",[t._v("特殊符号在一个字符集中没有特殊的意义，不必进行转义")])]),t._v(" "),a("h3",{attrs:{id:"xyz-a-c-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xyz-a-c-2"}},[t._v("#")]),t._v(" "),a("code",[t._v("[^xyz]")]),t._v(" & "),a("code",[t._v("[^a-c]")])]),t._v(" "),a("ul",[a("li",[t._v("与 "),a("code",[t._v("[xyz]")]),t._v(" & "),a("code",[t._v("[a-c]")]),t._v(" 取反")])]),t._v(" "),a("h3",{attrs:{id:"x"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#x"}},[t._v("#")]),t._v(" "),a("code",[t._v("(x)")])]),t._v(" "),a("ul",[a("li",[a("em",[t._v("捕获括号")])]),t._v(" "),a("li",[t._v("匹配 "),a("code",[t._v("x")]),t._v(" 并且记住匹配项")]),t._v(" "),a("li",[a("code",[t._v("/(abc) \\1/")]),t._v(" 中对 "),a("code",[t._v("1")]),t._v(" 进行转义，用于表示被捕获括号匹配的子字符串（这里代表的是abc）")]),t._v(" "),a("li",[t._v("捕获的内容在字符串中的表现形式是 "),a("code",[t._v("'$1'")]),t._v(" 、 "),a("code",[t._v("'$2'")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'act act'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(\\w+) \\1/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'act act'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'John Smith'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(\\w+)\\s(\\w+)/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$2, $1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'Smith, John'")]),t._v("\n")])])]),a("h3",{attrs:{id:"x-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#x-2"}},[t._v("#")]),t._v(" "),a("code",[t._v("(?:x)")])]),t._v(" "),a("ul",[a("li",[a("em",[t._v("非捕获括号")])]),t._v(" "),a("li",[t._v("不记住匹配项")])]),t._v(" "),a("h2",{attrs:{id:"量词"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#量词"}},[t._v("#")]),t._v(" 量词")]),t._v(" "),a("p",[t._v("表示匹配的字符或表达式的数量")]),t._v(" "),a("h3",{attrs:{id:"_0-n"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0-n"}},[t._v("#")]),t._v(" (0-n) "),a("code",[t._v("*")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("/x*/")])]),t._v(" "),a("li",[t._v("匹配"),a("strong",[t._v("前一个")]),t._v("表达式 0 次或多次")]),t._v(" "),a("li",[t._v("等价于 {0,}")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A ghost boooooed'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/bo*/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// booooo")]),t._v("\n")])])]),a("h3",{attrs:{id:"_1-n"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-n"}},[t._v("#")]),t._v(" (1-n) "),a("code",[t._v("+")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("/x+/")])]),t._v(" "),a("li",[t._v("匹配前面一个表达式 1 次或者多次")]),t._v(" "),a("li",[t._v("等价于 {1,}")])]),t._v(" "),a("h3",{attrs:{id:"_0-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0-1"}},[t._v("#")]),t._v(" (0-1) "),a("code",[t._v("?")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("/x?/")])]),t._v(" "),a("li",[t._v("匹配前面一个表达式 0 次或者 1 次")]),t._v(" "),a("li",[t._v("等价于 {0,1}")])]),t._v(" "),a("h3",{attrs:{id:"组合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组合"}},[t._v("#")]),t._v(" (组合) "),a("code",[t._v("*?")]),t._v(" & "),a("code",[t._v("+?")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("*")]),t._v(" 和 "),a("code",[t._v("+")]),t._v(" 将会不间断的一直匹配下去（mdn上描述为 "),a("code",[t._v("greedy")]),t._v(" 贪婪地）")]),t._v(" "),a("li",[a("code",[t._v("?")]),t._v(" 相较来说就是 "),a("code",[t._v("non-greedy")])]),t._v(" "),a("li",[t._v("两者结合则会产生奇妙的效果，可以理解为"),a("strong",[t._v("有节制的贪婪")]),t._v("：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'some <foo> <bar> new </bar> </foo> thing'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/<.*>/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <foo> <bar> new </bar> </foo>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'some <foo> <bar> new </bar> </foo> thing'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/<.*?/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'some <foo> <bar> new </bar> </foo> thing'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/<.*+/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <f")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'some <foo> <bar> new </bar> </foo> thing'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/<.*?a/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <foo> <ba")]),t._v("\n")])])]),a("h2",{attrs:{id:"使用技巧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用技巧"}},[t._v("#")]),t._v(" 使用技巧")]),t._v(" "),a("h3",{attrs:{id:"转义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转义"}},[t._v("#")]),t._v(" 转义")]),t._v(" "),a("ul",[a("li",[t._v("使用反斜杠 "),a("code",[t._v("\\")]),t._v(" ，进行转义")]),t._v(" "),a("li",[t._v("普通字符转义之后变成特殊字符")]),t._v(" "),a("li",[t._v("特殊字符转义之后变成普通字符")]),t._v(" "),a("li",[t._v("反斜杠可以使用反斜杠来转义，识别成普通的反斜杠字符串")])]),t._v(" "),a("h3",{attrs:{id:"标志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标志"}},[t._v("#")]),t._v(" 标志")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("g")]),t._v(" ：全局搜索")]),t._v(" "),a("li",[a("code",[t._v("i")]),t._v(" ：不区分大小写搜索")]),t._v(" "),a("li",[a("code",[t._v("m")]),t._v(" ：多行搜索")]),t._v(" "),a("li",[a("code",[t._v("s")]),t._v(" ：允许 "),a("code",[t._v(".")]),t._v(" 匹配换行符")]),t._v(" "),a("li",[a("code",[t._v("u")]),t._v(" ：使用unicode码的模式进行匹配")]),t._v(" "),a("li",[a("code",[t._v("y")]),t._v(" ：执行 “粘性” 搜索,匹配从目标字符串的当前位置开始，可以使用y标志")]),t._v(" "),a("li",[t._v("标志可组合使用")])])])}),[],!1,null,null,null);s.default=e.exports}}]);