(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{361:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"js模块化的意义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js模块化的意义"}},[t._v("#")]),t._v(" js模块化的意义")]),t._v(" "),a("ul",[a("li",[t._v("提供了一种更好的方式来组织变量和函数")]),t._v(" "),a("li",[t._v("解决命名冲突问题")]),t._v(" "),a("li",[t._v("解决变量共享问题")]),t._v(" "),a("li",[t._v("解决 "),a("code",[t._v("<script>")]),t._v(" 顺序排列难以维护的问题")]),t._v(" "),a("li",[t._v("解决变量存在于全局作用域，任何代码都可以改变的问题")])]),t._v(" "),a("h2",{attrs:{id:"js模块化演进历史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js模块化演进历史"}},[t._v("#")]),t._v(" js模块化演进历史")]),t._v(" "),a("ul",[a("li",[t._v("1999 :: "),a("strong",[t._v("直接定义依赖")]),a("br"),t._v("\n由于 js 在设计之初的定位，基本没有模块化的概念")]),t._v(" "),a("li",[t._v("2003 :: "),a("strong",[t._v("闭包模块化模式")]),a("br"),t._v("\n通过 IFEE 及 闭包，简单解决私有变量的需求")]),t._v(" "),a("li",[t._v("2003 - 2009 :: "),a("strong",[t._v("模版依赖")]),t._v(" 、 "),a("strong",[t._v("注释依赖")]),t._v(" 、 "),a("strong",[t._v("外部依赖")]),t._v(" 、 "),a("strong",[t._v("Sandbox")]),a("br"),t._v("\n这段时间出现了五花八门的模块化思路，但是都存在种种可维护性问题，都没有解决根本问题")]),t._v(" "),a("li",[t._v("2009 :: "),a("strong",[t._v("依赖注入")]),a("br"),t._v("\n由 angular1.0 引入前端领域，但是依赖注入和解决模块化问题还差得远")]),t._v(" "),a("li",[t._v("2009 :: "),a("strong",[t._v("CommonJS")]),a("br"),t._v("\nnodeJs 的出现，带来了真正意义上的模块化方案 CommonJS（服务端代码需要跟本地文件系统交互，跟网络层面交互，模块化成为必然）"),a("br"),t._v("\n真正解决模块化问题，后从 node 端逐渐发力到前端，前端需要使用构建工具模拟。")]),t._v(" "),a("li",[t._v("2009 :: "),a("strong",[t._v("AMD")]),t._v(" 、 "),a("strong",[t._v("CMD")]),a("br"),t._v("\n将 node 层面的 CommonJS 模块化方式在前端模拟，由于 node 是同步的引用本地文件，而在前端需要依靠 http 请求获取资源，实现的是一种异步的资源获取，二者实现的理念不同")]),t._v(" "),a("li",[t._v("2011 :: "),a("strong",[t._v("UMD")]),a("br"),t._v("\n同时兼容浏览器端与服务端的模块化方案，核心思想是，如果在 commonjs 环境（存在 module.exports，不存在 define），将函数执行结果交给 module.exports 实现 Commonjs，否则用 Amd 环境的 define，实现 Amd")]),t._v(" "),a("li",[t._v("2015 :: "),a("strong",[t._v("ES2015 Modules")]),a("br"),t._v("\n目前官方实现的模块化方案，之前的方案都是建立在运行时层面的，esm 是在编译期间的方案，目前还没有被浏览器实现，需要通过构建工具编译提供支持")])]),t._v(" "),a("h2",{attrs:{id:"amd-cmd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#amd-cmd"}},[t._v("#")]),t._v(" AMD & CMD")]),t._v(" "),a("h3",{attrs:{id:"amd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#amd"}},[t._v("#")]),t._v(" AMD")]),t._v(" "),a("p",[t._v("AMD规范采用异步方式加载模块，模块的加载不影响它后面语句的运行。所有依赖这个模块的语句，都定义在一个回调函数中，等到加载完成之后，这个回调函数才会运行。")]),t._v(" "),a("ul",[a("li",[t._v("代表："),a("code",[t._v("require.js")])]),t._v(" "),a("li",[t._v("核心思想："),a("strong",[t._v("依赖前置")])])]),t._v(" "),a("h4",{attrs:{id:"整体概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整体概念"}},[t._v("#")]),t._v(" 整体概念")]),t._v(" "),a("p",[t._v("D 模块依赖了 A、B、C 三个模块，顺序将是 "),a("code",[t._v("加载并执行 A")]),t._v(" -> "),a("code",[t._v("加载并执行 B")]),t._v(" -> "),a("code",[t._v("加载并执行 C")]),t._v(" -> "),a("code",[t._v("执行 D")])]),t._v(" "),a("h4",{attrs:{id:"简单使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单使用"}},[t._v("#")]),t._v(" 简单使用")]),t._v(" "),a("ul",[a("li",[t._v("定义模块")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n    * define(dependencs?: Array<string>, initial: Object | Function)\n    */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 直接定义一个对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'black'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'unisize'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过函数返回一个对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do something here ...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'black'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'unisize'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义有依赖项的模块")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./cart'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./inventory'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("cart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" inventory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// return an object to define the 'my/shirt' module.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'blue'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'large'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("addToCart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            inventory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("decrement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            cart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("导入模块")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 导入一个模块")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do something")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 导入多个模块")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do something")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"require-js-源码分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#require-js-源码分析"}},[t._v("#")]),t._v(" require.js 源码分析")]),t._v(" "),a("p",[t._v("每读取到一段逻辑之前，先将所依赖的所有模块读取加载，并且维护一份已经加载的模块的缓存池，读取完成之后再执行该逻辑。"),a("br"),t._v("\n一个文件即为一个模块，模块与模块之间可以依赖，也可以毫无干系。\n1. require 同时作为导入的函数（require），也作为定义的函数（define）\n2. 只有模块被作为依赖时，才会被通过 script 标签载入到文件节点，同时缓存进模块缓存池\n3. 模块的数据结构上有 onload API，保存了一系列依赖于该模块的代码片段，相当于各个通过 require 的代码片段之间加载阶段是不阻塞的，在依赖加载完全之后才会执行回调队列\n"),a("img",{attrs:{src:"/blog/img/module/amd%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90.png",alt:"amd流程分析"}})]),t._v(" "),a("h4",{attrs:{id:"部分源码："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部分源码："}},[t._v("#")]),t._v(" 部分源码：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 维护的模块缓存池")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" moduleCache "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * require\n     * 同时作为导入的函数（require），也作为定义的函数（define）\n     * 只有模块被作为依赖时，才会被缓存进模块缓存池\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("require")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("deps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" params "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 依赖加载后导出的 API 数组，后续会作为参数在执行回调的时候传入")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" depCount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 异步加载模块的哨兵变量")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前模块名称")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// require 作为导入模块时为'REQUIRE_MAIN'，作为定义的模块时为模块 id")]),t._v("\n        modName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentScript "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentScript"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'REQUIRE_MAIN'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若存在相关依赖模块")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("deps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 依次异步的加载模块，并将模块缓存进模块缓存池")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" len "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" deps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("len"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    depCount"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    \n                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n                     * 这里是关键 ！！\n                     * 模块作为依赖时才会执行 loadMod ，缓存进模块缓存池\n                     * 相关依赖加载完全之后，执行回调工厂\n                     */")]),t._v("\n\n                    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadMod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("deps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("param")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        depCount"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("depCount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("saveModule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("modName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            isEmpty "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isEmpty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在下一个宏任务中执行回调")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("saveModule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("modName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 加载模块，相当于由 define 定义的模块，需要通过 script 标签加载，并保存进模块缓存池\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("loadMod")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("modName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模块数据结构：")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     modName: 模块名称")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     status: 加载状态")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     export: 模块需要导出的 API（若存在）")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     onload: 模块加载完成后需要执行的回调队列，相当于保存了一系列依赖于该模块的代码片段")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("moduleCache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("modName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模块缓存池已存在")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'loaded'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模块已加载完全，说明此时该模块以及相关依赖均加载完成，在下一个宏任务中执行回调")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 加载中状态，将回调添加进模块的 onload 回调队列")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模块未加载")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 加载方式为添加 script 标签，异步加载模块代码")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将模块保存进模块缓存池")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 模块依赖初始化完成之后的回调工厂\n     * 作为依赖的模块会执行 onload 队列，相当于多个回调\n     * 只作为导入的代码片段的模块，直接执行回调\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("saveModule")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("modName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("moduleCache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("modName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模块已存在于模块缓存池")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 意味着该模块为定义的模块，执行该模块的初始化工作，依次执行 onload 队列")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 未存在")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 意味着该模块为单纯的导入模块，直接执行回调")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 导出 require 和 define 方法")]),t._v("\n    window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("require "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" require"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("define "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" require"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),a("h3",{attrs:{id:"cmd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cmd"}},[t._v("#")]),t._v(" CMD")]),t._v(" "),a("p",[t._v("最贴近CommonJS的浏览器端异步模块化方案，简单的去除define的外包装，"),a("strong",[t._v("就是标准的CommonJS实现")])]),t._v(" "),a("p",[t._v("CMD 规范中（前身为Modules/Wrappings规范），定义一个模块就是一个文件，形式为 "),a("code",[t._v("define(factory)")]),t._v(" ，factory 即为定义模块的工厂函数，描述一份模块的初始化及导出部分。")]),t._v(" "),a("p",[t._v("factory 为模块运行时提供 require, exports, module ，作为模块向外提供的接口。")]),t._v(" "),a("ul",[a("li",[t._v("代表："),a("code",[t._v("Sea.js")])]),t._v(" "),a("li",[t._v("核心思想："),a("strong",[t._v("依赖后置")]),t._v(" 、"),a("strong",[t._v("即用即加载")])]),t._v(" "),a("li",[t._v("整体概念：在模块定义中，使用到某块依赖时才去手动导入，即 即用即加载")])]),t._v(" "),a("h4",{attrs:{id:"简单使用（sea-js-为例）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单使用（sea-js-为例）"}},[t._v("#")]),t._v(" 简单使用（Sea.js 为例）")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所有模块都通过 define 来定义")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("require"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" module")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过 require 引入依赖，获取模块 a 的接口")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用模块 a 的方法")]),t._v("\n    a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过 exports 对外提供接口foo 属性")]),t._v("\n    exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对外提供 doSomething 方法")]),t._v("\n    exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("doSomething")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误用法！！!")]),t._v("\n    exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("doSomething")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正确写法，通过module.exports提供整个接口")]),t._v("\n    module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("doSomething")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// factory 为对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// factory 为函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("require"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" module")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模块代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"sea-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sea-js"}},[t._v("#")]),t._v(" Sea.js")]),t._v(" "),a("p",[t._v("Sea.js 更多的借鉴了 Modules/2.0 及 Modules/Transport 规范，即为 CMD 模块命名，使得 CMD 模块可以合并成JS文件，形式为 "),a("code",[t._v("define(id?, deps?, factory)")]),t._v(" ，通过定义的 id 来缓存模块。")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",[t._v("Sea.js 注意点：")]),t._v(" "),a("ol",[a("li",[t._v("一个模块就是一个文件，当一个文件里有多个 define 时，"),a("code",[t._v("v1.3.1")]),t._v(" 之前默认将第一个define里的模块作为主模块进行返回，之后的版本只有最后一个定义的 CMD 模块会被识别，前面定义的模块都被它覆盖了")]),t._v(" "),a("li",[t._v("若没有显示的指明 id ，SeaJS 会用这个js文件的url作为它的 id")])])]),t._v(" "),a("h4",{attrs:{id:"factory-的三个参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#factory-的三个参数"}},[t._v("#")]),t._v(" factory 的三个参数")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("require")]),t._v(" : Function，同步获取其他模块提供的接口\n"),a("ul",[a("li",[t._v("require的模块不能被返回时，应该返回 null")]),t._v(" "),a("li",[t._v("require.async(id, callback?)，用来异步加载模块，加载失败时，callback 的形参为 null")]),t._v(" "),a("li",[t._v("require.resolve(id)，用来返回解析后的绝对路径")]),t._v(" "),a("li",[t._v("条件加载时如 "),a("code",[t._v('var func = someExpResult ? require("play") : require("work");')]),t._v(" ，浏览器会将两个模块文件都下载下来，建议使用 require.async 条件加载")])])]),t._v(" "),a("li",[a("code",[t._v("exports")]),t._v(" : Object，仅仅是 module.exports 的一个引用，在模块内部对外提供接口")]),t._v(" "),a("li",[a("code",[t._v("module")]),t._v(" : Object，模板引用\n"),a("ul",[a("li",[t._v("module.url 解析后的绝对路径")]),t._v(" "),a("li",[t._v("module.dependencies 模块依赖")]),t._v(" "),a("li",[t._v("module.exports 暴露模块接口数据，也可以通过 return 直接提供接口")])])])]),t._v(" "),a("h4",{attrs:{id:"sea-js-模块加载大致流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sea-js-模块加载大致流程"}},[t._v("#")]),t._v(" Sea.js 模块加载大致流程")]),t._v(" "),a("p",[t._v("SeaJS 通过 factory.toString() 拿到源码，再通过正则匹配 require 的方式来得到依赖信息。\n"),a("img",{attrs:{src:"/blog/img/module/cmd%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90.jpg",alt:"amd流程分析"}})]),t._v(" "),a("ol",[a("li",[t._v("通过 use 方法来加载入口模块，并接收一个回调函数， 当模块加载完成， 会调用回调函数，并传入对应的模块作为参数。")]),t._v(" "),a("li",[t._v("从缓存或创建并加载 来获取到模块后，等待模块（包括模块依赖的模块）加载完成会调用回调函数。")]),t._v(" "),a("li",[t._v("在图片虚线部分中，加载factory及分析出模块的依赖，按依赖关系递归执行 document.createElement(‘script’) 。")])]),t._v(" "),a("h3",{attrs:{id:"amd-vs-cmd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#amd-vs-cmd"}},[t._v("#")]),t._v(" AMD vs CMD")]),t._v(" "),a("p",[t._v("AMD 与 CMD （RequireJS 与 Sea.js）的主要区别：")]),t._v(" "),a("ol",[a("li",[t._v("模块加载的时机不同\n"),a("ul",[a("li",[t._v("RequireJS - 旨在 "),a("strong",[t._v("依赖前置")]),t._v(" ，会先加载并执行全部依赖，再执行模块")]),t._v(" "),a("li",[t._v("Sea.js - 旨在 "),a("strong",[t._v("即用即加载")]),t._v(" ，在模块加载运行的时候依赖了某其他模块，同步加载该依赖，加载完毕后再继续执行后续模块")])])]),t._v(" "),a("li",[t._v("依赖加载错误时需要的处理方式不同\n"),a("ul",[a("li",[t._v("RequireJS - 依赖加载阶段，意味着所提供支持的模块还未执行任何操作，无需考虑回滚操作")]),t._v(" "),a("li",[t._v("Sea.js - 依赖加载出错，所提供支持的模块可能已经执行了某操作，需考虑回滚操作")])])]),t._v(" "),a("li",[t._v("设计理念不同\n"),a("ul",[a("li",[t._v("RequireJS - require 使用方法特别灵活"),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -- gets exports of module a")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -- fetch module a according to module name scheme")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -- fetch a.js directly relative to current page")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -- set loader config")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("Sea.js - 努力保持简单，并支持 CSS 模块的加载\n"),a("ul",[a("li",[t._v("保持简单，职责单一。")]),t._v(" "),a("li",[t._v("遵守规范，但不拘泥。")]),t._v(" "),a("li",[t._v("适度灵活。")])])])])]),t._v(" "),a("li",[t._v("关注点不同\n"),a("ul",[a("li",[t._v("RequireJS - 兼顾 浏览器 、 Rhino 和 node")]),t._v(" "),a("li",[t._v("Sea.js - 只关注 浏览器")])])])]),t._v(" "),a("h2",{attrs:{id:"commonjs-es6-module"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commonjs-es6-module"}},[t._v("#")]),t._v(" CommonJS & ES6 Module")]),t._v(" "),a("h3",{attrs:{id:"commonjs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commonjs"}},[t._v("#")]),t._v(" CommonJS")]),t._v(" "),a("p",[t._v("2009年，nodeJS 诞生了，服务端代码需要跟本地文件系统交互，跟网络层面交互，等等，模块化成为必然，CommonJS 算是真正意义上的比较完善的 js 模块化方案"),a("br"),t._v("\n这里需要特别强调一下，CommonJS 模块化规范规定的是在 "),a("strong",[t._v("运行时")]),t._v(" 的模块加载规范，即在运行时即用即加载，并缓存")]),t._v(" "),a("h4",{attrs:{id:"意义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#意义"}},[t._v("#")]),t._v(" 意义")]),t._v(" "),a("ul",[a("li",[t._v("为了让Node.js的文件可以相互调用，Node.js提供了一个简单的模块系统")]),t._v(" "),a("li",[t._v("模块是Node.js应用程序的基本组成部分")]),t._v(" "),a("li",[t._v("文件和模块是一一对应的，一个Node.js文件就是一个模块")]),t._v(" "),a("li",[t._v("这个文件可能是JavaScript代码、json或者编译过的C / C++扩展")]),t._v(" "),a("li",[t._v("Node.js中存在4类模块：原生模块和3种文件模块")])]),t._v(" "),a("h4",{attrs:{id:"模块加载-require-方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块加载-require-方法"}},[t._v("#")]),t._v(" 模块加载 - "),a("code",[t._v("require")]),t._v(" 方法")]),t._v(" "),a("ul",[a("li",[t._v("传参方式"),a("br"),t._v("\nrequire方法接受以下几种参数的传递：\n"),a("ol",[a("li",[a("code",[t._v("http")]),t._v("、"),a("code",[t._v("fs")]),t._v("、"),a("code",[t._v("path")]),t._v(" 等，原生模块")]),t._v(" "),a("li",[a("code",[t._v("./mod")]),t._v(" 或者 "),a("code",[t._v("../mod")]),t._v("，相对路径的文件模块")]),t._v(" "),a("li",[a("code",[t._v("/pathtomodule/mod")]),t._v("，绝对路径的文件模块")]),t._v(" "),a("li",[t._v("mod，非原生模块的文件模块")])])]),t._v(" "),a("li",[t._v("加载流程\n"),a("ul",[a("li",[t._v("从文件模块缓存中加载")]),t._v(" "),a("li",[t._v("从原生模块加载")]),t._v(" "),a("li",[t._v("从文件加载\n"),a("img",{attrs:{src:"/blog/img/module/modules-load.png",alt:"模块加载流程"}})])])]),t._v(" "),a("li",[t._v("模块缓存\n"),a("ul",[a("li",[t._v("每次加载一个模块都会被缓存，这意味着 CommonJS 是运行在运行时修改模块状态的")]),t._v(" "),a("li",[t._v("所有缓存的模块都保存在 require.cache 中，以模块的绝对路径作为 key 缓存该模块导出的值")]),t._v(" "),a("li",[t._v("这意味着：俩模块名相同，但是保存在不同的路径，对 require 命令来说就是不同的模块，会重新加载")])])])]),t._v(" "),a("h4",{attrs:{id:"模块定义-module-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块定义-module-对象"}},[t._v("#")]),t._v(" 模块定义 - "),a("code",[t._v("module")]),t._v(" 对象")]),t._v(" "),a("ul",[a("li",[t._v("module.id - 模块的识别符，通常是带有"),a("strong",[t._v("绝对路径")]),t._v("的模块文件名。")]),t._v(" "),a("li",[t._v("module.filename - 模块的文件名，带有绝对路径。")]),t._v(" "),a("li",[t._v("module.loaded - 返回一个布尔值，表示模块是否已经完成加载。")]),t._v(" "),a("li",[t._v("module.parent - 返回一个对象，表示调用该模块的模块。")]),t._v(" "),a("li",[t._v("module.children - 返回一个数组，表示该模块要用到的其他模块。")]),t._v(" "),a("li",[t._v("module.exports - 表示模块对外输出的值。")]),t._v(" "),a("li",[a("code",[t._v("exports")]),t._v(" - 为了方便，Node为每个模块提供一个exports变量，仅仅是 module.exports 的一个引用，在模块内部对外提供接口")])]),t._v(" "),a("h3",{attrs:{id:"es6-module"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6-module"}},[t._v("#")]),t._v(" ES6 Module")]),t._v(" "),a("p",[t._v("正统的 JS 模块化规范，在之前的规范中对于js只有一种源文件—— "),a("code",[t._v("脚本")]),t._v("（主动的代码段），ES6 出现之后，新出现了一种源文件形式—— "),a("code",[t._v("模块")]),t._v("（被动的代码段）。引入模块方式如下（即指定"),a("strong",[t._v("解析目标")]),t._v("为模块）")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"module"')]),t._v(" src"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxxxx.js"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("以下为 ESM 解析原理")]),t._v(" "),a("h4",{attrs:{id:"名词"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#名词"}},[t._v("#")]),t._v(" 名词")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("运行时环境")]),t._v(" - 浏览器 或者 Node")]),t._v(" "),a("li",[a("strong",[t._v("加载器")]),t._v(" - 由 "),a("strong",[t._v("运行时环境")]),t._v(" 提供，用于从模块定位符（url）加载资源")]),t._v(" "),a("li",[a("strong",[t._v("入口文件")]),t._v(" - 指定为入口的脚本，从这个入口文件开始运行时环境会顺着导入语句找出所依赖的其他代码文件")]),t._v(" "),a("li",[a("strong",[t._v("模块定位符")]),t._v(" - 模块导入、导出时的模块路径，浏览器中一般为 url ，node 中一般为本地文件的路径")]),t._v(" "),a("li",[a("strong",[t._v("模块定位算法")]),t._v(" - 每个平台都有自己的一套方式来解析"),a("strong",[t._v("模块定位符")]),t._v("。这些方式称为"),a("strong",[t._v("模块定位算法")])]),t._v(" "),a("li",[a("strong",[t._v("模块记录")]),t._v(" - 构建阶段产物，是模块协议将得到的js文件（字符串）解析成浏览器（运行时环境）能理解的一种数据结构")]),t._v(" "),a("li",[a("strong",[t._v("模块环境记录")]),t._v(" - 管理 "),a("strong",[t._v("模块记录")]),t._v(" 的所有变量，跟踪每个导出对应于哪个内存地址")]),t._v(" "),a("li",[a("strong",[t._v("解析目标")]),t._v(" - 解析一个js文件需要指定 "),a("strong",[t._v("解析目标")]),t._v(" ， "),a("strong",[t._v("解析目标")]),t._v(" 不同解析的结果也不同，指定 "),a("code",[t._v('type="module"')]),t._v(" （node中指定后缀 "),a("code",[t._v(".mjs")]),t._v(" 文件）可以将js文件以模块的文件类型解析，规范中规定 ES6 所有的模块都按照 "),a("strong",[t._v("严格模式")]),t._v(" 来解析")]),t._v(" "),a("li",[a("strong",[t._v("链接")]),t._v(" - 发生在实例化阶段，即将各个 "),a("strong",[t._v("模块记录")]),t._v(" 依照导出、导入语句与内存地址组合起来")]),t._v(" "),a("li",[a("strong",[t._v("代码")]),t._v(" - 即指令集合，描述计算机该如何运行")]),t._v(" "),a("li",[a("strong",[t._v("状态")]),t._v(" - 即变量在任何时候的真实值，存储在内存中")]),t._v(" "),a("li",[a("strong",[t._v("模块实例")]),t._v(" - 运行阶段的产物，指 "),a("strong",[t._v("代码")]),t._v(" 与 "),a("strong",[t._v("状态")]),t._v(" 的结合，即指令集和变量值的结合。")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("几个注意点：")]),t._v(" "),a("ol",[a("li",[t._v("ESM 规范规定了模块的解析、实例化、如何运行，并没有规定模块的下载（加载），下载过程是当前运行时环境规定的（提供的"),a("strong",[t._v("加载器")]),t._v("），浏览器中根据 "),a("code",[t._v("<script>")]),t._v(" URL地址去加载模块文件，node中为文件系统的本地文件")]),t._v(" "),a("li",[t._v("引擎是被动的，它提供各种接口（包括 ParseModule、Module.Instantiate 和 Module.Evaluate 等等），是运行时环境控制引擎什么时候该做什么")])])]),t._v(" "),a("h4",{attrs:{id:"解析流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解析流程"}},[t._v("#")]),t._v(" 解析流程")]),t._v(" "),a("p",[t._v("模块规范要做的事情就是将加载过来的js文件（字符串）转换成引擎能够使用的模块实例（指令集和变量值），esm 分三个阶段（commonJS同步进行，即用即加载）")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("构建阶段")]),t._v(" - 查找，下载，然后把所有js文件（字符串）解析成一堆 "),a("strong",[t._v("模块记录")])]),t._v(" "),a("li",[a("strong",[t._v("实例化")]),t._v(" - 为所有模块根据"),a("strong",[t._v("模块环境记录")]),t._v("分配内存空间（此刻还没有填充值），然后依照导出、导入语句把模块指向对应的内存地址。这个过程称为"),a("strong",[t._v("链接")])]),t._v(" "),a("li",[a("strong",[t._v("运行")]),t._v(" - 运行代码，从而把内存空间填充为真实值，生成多个 "),a("strong",[t._v("模块实例")]),t._v(" "),a("img",{attrs:{src:"/blog/img/module/ESM%E8%A7%A3%E6%9E%90%E6%B5%81%E7%A8%8B.png",alt:"ESM解析流程"}})])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("为什么node环境中模块的加载到解析运行，都是同步的，而浏览器中需要分不同阶段处理呢？")]),t._v(" "),a("p",[t._v("原因是两个运行时环境的 "),a("strong",[t._v("模块定位算法")]),t._v(" 不同：")]),t._v(" "),a("ul",[a("li",[t._v("node环境 - 资源加载依赖本地的文件系统，因此构建、解析到运行都可以同步进行")]),t._v(" "),a("li",[t._v("浏览器环境 - 不同于node环境，资源的加载需要从网络上下载，同时UI渲染与JS引擎使用的是同一主线程，解析时间过长势必导致UI卡顿，因此浏览器环境将算法分为三个阶段，在构建阶段只是单纯的构建 "),a("strong",[t._v("模块记录")]),t._v(" ，并不完全解析模块完整代码")])])]),t._v(" "),a("h4",{attrs:{id:"构建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建"}},[t._v("#")]),t._v(" 构建")]),t._v(" "),a("p",[t._v("主要的目：使得运行时环境在不用完整解析模块实例，理解模块关系图 ！")]),t._v(" "),a("p",[t._v("构建又分为三个步骤：（前两步都依靠运行时环境处理，生成模块记录是运行时环境控制引擎完成的）")]),t._v(" "),a("ol",[a("li",[t._v("确定要从哪里下载包含该模块的文件，也称为"),a("strong",[t._v("模块定位")]),t._v("（Module Resolution）")]),t._v(" "),a("li",[t._v("提取文件，通过从 URL 下载或者从文件系统加载")]),t._v(" "),a("li",[t._v("解析文件为"),a("strong",[t._v("模块记录")])])]),t._v(" "),a("ul",[a("li",[t._v("动态导入"),a("br"),t._v("\n构建阶段由于只建立一堆模块记录，此时变量是还没有值的（还未分配内存），因此不支持动态导入 (与 commonJS 不同)"),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" someModule "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("/path/")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("someModule"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Error !")]),t._v("\n")])])]),t._v("可以使用 "),a("code",[t._v("import()")]),t._v(" 语法实现动态导入依赖，引擎会将加载的文件当成了一个新的入口文件，"),a("strong",[t._v("动态导入的模块会开启一个全新的独立依赖关系树")])]),t._v(" "),a("li",[t._v("加载器加载模块"),a("br"),t._v("\n加载器使用"),a("strong",[t._v("模块映射")]),t._v("管理缓存，即 K-V 模型，key 为 URL，加载完成之前 value 标记为加载中，加载完成之后 value 为生成的"),a("strong",[t._v("模块记录")])]),t._v(" "),a("li",[t._v("解析模块"),a("br"),t._v("\n引擎根据"),a("strong",[t._v("解析目标")]),t._v("解析js文件，"),a("code",[t._v('type="module"')]),t._v(" 将作为模块解析")])]),t._v(" "),a("h4",{attrs:{id:"实例化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例化"}},[t._v("#")]),t._v(" 实例化")]),t._v(" "),a("p",[t._v("主要的目：单独的 "),a("strong",[t._v("模块记录")]),t._v(" 之间是没有关联关系的，实例化过程即建立模块之间的关联关系 ！所有导出的函数声明都在这个阶段初始化")]),t._v(" "),a("ul",[a("li",[t._v("实例化顺序：引擎会采用"),a("strong",[t._v("深度优先的后序遍历方式")]),t._v("，这意味着将从关系图到达最底端没有任何依赖的模块，然后设置它们的导出")]),t._v(" "),a("li",[t._v("简单理解就是：A 中 import 依赖 B ，"),a("strong",[t._v("链接")]),t._v(" 过程即将 B 的导出，导入到 A 中，连接"),a("strong",[t._v("内存地址")]),t._v("（此时还没有值）")]),t._v(" "),a("li",[t._v("注意此处导出与 commonJS 的不同：\n"),a("ul",[a("li",[t._v("commonJS 为值拷贝，即导出的内容与模块的内容内存地址不相同，在导入依赖的地方将变量重新赋值并不会抛出异常")]),t._v(" "),a("li",[t._v("ES Module 为值引用（实时绑定），即导入、导出所使用的变量是同一块内存地址")])])])]),t._v(" "),a("p",[t._v("这样做的好处是：使得引擎可以在不运行任何模块代码的情况下完成"),a("strong",[t._v("链接")]),t._v("，对解决运行阶段的循环依赖问题有一定帮助")]),t._v(" "),a("h4",{attrs:{id:"运行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行"}},[t._v("#")]),t._v(" 运行")]),t._v(" "),a("p",[t._v("主要的目：往已申请好的内存空间中填入真实值 ！使得模块完全可用")]),t._v(" "),a("ul",[a("li",[t._v("运行顺序：引擎会采用"),a("strong",[t._v("深度优先的后序遍历方式")]),t._v("，与实例化阶段一致")]),t._v(" "),a("li",[t._v("关于副作用：模块代码只会运行一次，因为在初始化的过程中可能会存在一些副作用（向服务器发送请求之类的）")]),t._v(" "),a("li",[t._v("关于循环引用：由于 esm 使用的导出方式是值引用，因此对于循环引用，模块拿到的值始终是同一份，可以理解为"),a("strong",[t._v("实时的")]),t._v("，因此循环引用这点在 esm 中支持的比较好（也正是由于循环引用问题，esm 在设计之初就考虑到了，因此这也是浏览器环境将 "),a("strong",[t._v("模块定位算法")]),t._v(" 分段的原因之一）")])]),t._v(" "),a("h3",{attrs:{id:"cjs-vs-esm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cjs-vs-esm"}},[t._v("#")]),t._v(" CJS vs ESM")]),t._v(" "),a("p",[t._v("个人理解：commonJS 设计初衷是为 nodejs 提供模块化支持，其模块加载原则是即用即加载，无需考虑网络层的时间消耗。ES Module 则设计用来支持浏览器端的模块化需求，从底层设计上对 "),a("strong",[t._v("模块定位算法")]),t._v(" 的分段，以及导入导出机制等等，都是为浏览器环境的运行机制所做出的调整")]),t._v(" "),a("ol",[a("li",[t._v("模块定位算法不同（由于所属环境差异，考虑性能使得资源加载的方式有不同）\n"),a("ul",[a("li",[t._v("cjs - 各阶段完全同步进行，可以理解为运行时模块化方案")]),t._v(" "),a("li",[t._v("esm - 分三阶段，构建阶段只解析js文件生成模块记录，实例化阶段生成模块记录直接的关联关系，运行阶段")])])]),t._v(" "),a("li",[t._v("模块定位算法不同导致模块协议对于动态导入支持不同\n"),a("ul",[a("li",[t._v("cjs - 各阶段同步进行，运行时变量即有值")]),t._v(" "),a("li",[t._v("esm - 导入语法解析在构建阶段，此时变量还未分配内存，因此不可用使用变量动态导入模块（可以依靠 "),a("code",[t._v("import()")]),t._v(" 语法实现动态）")])])]),t._v(" "),a("li",[t._v("模块导出的机制不同\n"),a("ul",[a("li",[t._v("cjs - 导出为 "),a("strong",[t._v("值拷贝")]),t._v(" ，即不保存模块状态")]),t._v(" "),a("li",[t._v("esm - 导出为 "),a("strong",[t._v("实时绑定")]),t._v(" ，导出和导入的模块都指向相同的内存地址，同时导入为只读，即 import 进来的引用类型不能重新赋值")])])]),t._v(" "),a("li",[t._v("模块导出的机制不同导致对于循环引用的处理方式不同\n"),a("ul",[a("li",[t._v("cjs - "),a("strong",[t._v("不支持循环引用")]),t._v("，导出机制受解析顺序控制，若循环引用的模块未加载完，拿到的值为 "),a("code",[t._v("undefined")])]),t._v(" "),a("li",[t._v("esm - "),a("strong",[t._v("支持循环引用")]),t._v("，导出机制为值引用，为实时值")])])])]),t._v(" "),a("h2",{attrs:{id:"其他的模块化方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他的模块化方案"}},[t._v("#")]),t._v(" 其他的模块化方案")]),t._v(" "),a("h3",{attrs:{id:"umd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#umd"}},[t._v("#")]),t._v(" umd")]),t._v(" "),a("p",[t._v("该模块是可同时兼容浏览器端与服务端的模块化方案，形式为如下")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("global"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" factory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'object'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" module "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'undefined'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("factory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" define "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" define"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("amd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("factory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("global"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("libName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("factory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'use strict'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 翻译一哈")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("global"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" factory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断 exports 、 module 是否存在")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'object'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" module "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'undefined'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是，即为 node 环境（commonJs）")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("factory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 否，判断 define 、define.amd 是否存在")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" define "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" define"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("amd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是，即为 浏览器 环境")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("factory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 否，撒也不似")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("global"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("libName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("factory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'use strict'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 运算符优先级")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... ? ... : ...  <  &&  <  ===  <  =  <  typeof")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);